#cloud-config

# Install, update, and upgrade packages
package_upgrade: true
package_update: true
package_reboot_if_require: true

# Install packages
packages:
  - nginx

write_files:
  - owner: www-data:www-data
  - path: /etc/nginx/sites-available/secure-server
    content: |
      server {
        server_name mydnslabela57f44.eastus.cloudapp.azure.com;
        listen 443 ssl http2;
        ssl_certificate /etc/nginx/ssl/nginxcerta57f44.crt;
        ssl_certificate_key /etc/nginx/ssl/nginxcerta57f44.key;
      }
      server {
            listen 80;
            server_name mydnslabela57f44.eastus.cloudapp.azure.com;
            return 301 https://mydnslabela57f44.eastus.cloudapp.azure.com$request_uri;
      }

  - owner: root:root
    path: /root/convert_akv_cert.sh
    permissions: "0750"
    content: |
        #!/bin/bash
        runtime="10 minute"; endtime=$(date -ud "$runtime" +%s); 
        while [[ $(date -u +%s) -le $endtime ]]; do
          if [[ ! -f /etc/nginx/ssl/mykeyvaulta57f44.nginxcerta57f44 ]]
            then
                sleep 5;
            else
                break;
          fi;
        done
        # Split the file in two (cert and key)
        echo "Creating .key file with private key..."
        openssl rsa -outform pem -in /etc/nginx/ssl/mykeyvaulta57f44.nginxcerta57f44 -out /etc/nginx/ssl/nginxcerta57f44.key
        echo "Creating .crt file with certificate..."
        openssl x509 -outform pem -in /etc/nginx/ssl/mykeyvaulta57f44.nginxcerta57f44 -out /etc/nginx/ssl/nginxcerta57f44.crt
runcmd:
  - mkdir /etc/nginx/ssl
  - ln -s /etc/nginx/sites-available/secure-server /etc/nginx/sites-enabled/
  - rm /etc/nginx/sites-enabled/default
  - bash /root/convert_akv_cert.sh
  - (crontab -l 2>/dev/null; echo "0 * * * * /root/convert_akv_cert.sh && service nginx reload") | crontab -
  - service nginx restart
