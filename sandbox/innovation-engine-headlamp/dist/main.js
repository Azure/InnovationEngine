(function(e,i){typeof exports=="object"&&typeof module<"u"?i(require("react/jsx-runtime"),require("@kinvolk/headlamp-plugin/lib"),require("@kinvolk/headlamp-plugin/lib/CommonComponents"),require("@mui/material/Typography"),require("react")):typeof define=="function"&&define.amd?define(["react/jsx-runtime","@kinvolk/headlamp-plugin/lib","@kinvolk/headlamp-plugin/lib/CommonComponents","@mui/material/Typography","react"],i):(e=typeof globalThis<"u"?globalThis:e||self,i(e.pluginLib.ReactJSX,e.pluginLib,e.pluginLib.CommonComponents,e.pluginLib.MuiMaterial.Typography,e.pluginLib.React))})(this,function(e,i,f,m,y){"use strict";const x=n=>n&&typeof n=="object"&&"default"in n?n:{default:n},c=x(m),o=x(y);i.registerSidebarEntry({name:"mypluginsidebar",label:"Getting Started",url:"/getting-started",icon:"mdi:comment-quote",sidebar:"HOME"}),i.registerRoute({path:"/getting-started",sidebar:{item:"getting-started",sidebar:"Innovation-engine"},useClusterURL:!1,noAuthRequired:!0,name:"getting-started",exact:!0,component:()=>{const n=()=>{window.location.hash="#/shell-exec",setTimeout(()=>{window.dispatchEvent(new CustomEvent("prefill-innovation-engine-command",{detail:"ie execute ../../../scenarios/testing/variableHierarchy.md"}))},100)};return e.jsxs(f.SectionBox,{title:"Getting Started",textAlign:"center",paddingTop:2,children:[e.jsx(c.default,{children:"This is where Innovation Engine lives"}),e.jsx("br",{}),e.jsx("a",{href:"#",onClick:a=>{a.preventDefault(),n()},style:{fontWeight:"bold",color:"#1976d2",textDecoration:"underline",cursor:"pointer"},children:"Test Innovation Engine"})]})}}),i.registerSidebarEntry({name:"backtohome",label:"Back to Home",url:"/",icon:"mdi:hexagon",sidebar:"Innovation-engine"}),i.registerSidebarEntry({name:"getting-started",label:"Getting Started",url:"/getting-started",icon:"mdi:comment-quote",sidebar:"Innovation-engine"}),i.registerRoute({path:"/shell-exec",sidebar:{item:"shell-exec",sidebar:"Innovation-engine"},useClusterURL:!1,noAuthRequired:!0,name:"shell-exec",exact:!0,component:()=>{const[n,a]=o.default.useState("ie execute "),[h,p]=o.default.useState(""),[l,u]=o.default.useState(""),[s,g]=o.default.useState(!1);o.default.useEffect(()=>{const r=d=>{d.detail&&a(d.detail)};return window.addEventListener("prefill-innovation-engine-command",r),()=>window.removeEventListener("prefill-innovation-engine-command",r)},[]);const t=async()=>{g(!0),p(""),u("");try{const r=await fetch("http://localhost:4000/api/exec",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({command:n})}),d=await r.json();r.ok?p(`stdout:
${d.stdout}
stderr:
${d.stderr}
exitCode: ${d.exitCode}`):u(d.error||"Unknown error")}catch(r){u(r.message)}finally{g(!1)}};return e.jsxs(f.SectionBox,{title:"Innovation Engine",textAlign:"center",paddingTop:2,children:[e.jsx(c.default,{children:"Enter an allowlisted shell command (e.g., ie):"}),e.jsx("input",{type:"text",value:n,onChange:r=>a(r.target.value),onKeyDown:r=>{r.key==="Enter"&&!s&&t()},style:{width:"60%",margin:"1em 0",padding:"0.5em"}}),e.jsx("br",{}),e.jsx("button",{onClick:t,disabled:s,style:{padding:"0.5em 1em"},children:s?"Running...":"Execute"}),e.jsx("pre",{style:{textAlign:"left",marginTop:"1em",background:"#f5f5f5",padding:"1em"},children:h}),l&&e.jsxs(c.default,{color:"error",children:["Error: ",l]})]})}}),i.registerSidebarEntry({name:"shell-exec",label:"Innovation Engine",url:"/shell-exec",icon:"mdi:console",sidebar:"Innovation-engine"}),i.registerSidebarEntry({name:"assistant",label:"Assistant",url:"/assistant",icon:"mdi:robot",sidebar:"Innovation-engine"}),i.registerRoute({path:"/assistant",sidebar:{item:"assistant",sidebar:"Innovation-engine"},useClusterURL:!1,noAuthRequired:!0,name:"assistant",exact:!0,component:()=>{const[n,a]=o.default.useState(""),[h,p]=o.default.useState([{role:"assistant",content:"Hello! I'm the Innovation Engine Assistant. How can I help you with your Kubernetes or Executable Document needs?"}]),[l,u]=o.default.useState(!1),s=o.default.useRef(null);o.default.useEffect(()=>{s.current&&(s.current.scrollTop=s.current.scrollHeight)},[h]);const g=()=>{n.trim()&&(p(t=>[...t,{role:"user",content:n}]),u(!0),setTimeout(()=>{p(t=>[...t,{role:"assistant",content:`I received your request: "${n}". This is a placeholder response. In the full implementation, this would be processed by GitHub Copilot.`}]),a(""),u(!1)},1e3))};return e.jsxs(f.SectionBox,{title:"Innovation Engine Assistant",textAlign:"left",paddingTop:2,children:[e.jsxs("div",{ref:s,style:{height:"400px",overflowY:"auto",marginBottom:"20px",padding:"10px",border:"1px solid #e0e0e0",borderRadius:"4px",backgroundColor:"#f9f9f9"},children:[h.map((t,r)=>e.jsx("div",{style:{marginBottom:"10px",textAlign:t.role==="user"?"right":"left"},children:e.jsx("div",{style:{display:"inline-block",maxWidth:"80%",padding:"10px",borderRadius:"8px",backgroundColor:t.role==="user"?"#1976d2":"#ffffff",color:t.role==="user"?"white":"black",boxShadow:"0 1px 2px rgba(0,0,0,0.1)",border:t.role==="assistant"?"1px solid #e0e0e0":"none"},children:e.jsx(c.default,{children:t.content})})},r)),l&&e.jsx("div",{style:{textAlign:"center",padding:"10px"},children:e.jsx(c.default,{color:"textSecondary",children:"Processing your request..."})})]}),e.jsxs("div",{style:{display:"flex",alignItems:"flex-start",gap:"10px"},children:[e.jsx("textarea",{value:n,onChange:t=>a(t.target.value),onKeyDown:t=>{t.key==="Enter"&&!t.shiftKey&&(t.preventDefault(),g())},placeholder:"Enter your question or request here (e.g., 'Create a deployment for my app')",style:{flexGrow:1,padding:"10px",borderRadius:"4px",border:"1px solid #ccc",minHeight:"100px",resize:"vertical",fontFamily:"inherit",fontSize:"14px"}}),e.jsx("button",{onClick:g,disabled:l||!n.trim(),style:{padding:"10px 20px",backgroundColor:"#1976d2",color:"white",border:"none",borderRadius:"4px",cursor:l||!n.trim()?"not-allowed":"pointer",opacity:l||!n.trim()?.7:1},children:"Send"})]}),e.jsxs("div",{style:{marginTop:"20px",borderTop:"1px solid #e0e0e0",paddingTop:"20px"},children:[e.jsx(c.default,{variant:"h6",children:"Quick Start:"}),e.jsx("div",{style:{display:"flex",flexWrap:"wrap",gap:"10px",marginTop:"10px"},children:["Create a simple deployment","Expose a service","Author an Executable Document","Learn about Kubernetes basics"].map((t,r)=>e.jsx("button",{onClick:()=>a(t),style:{padding:"8px 12px",backgroundColor:"#f1f1f1",border:"1px solid #ddd",borderRadius:"16px",cursor:"pointer"},children:t},r))})]})]})}})});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
